knitr::opts_chunk$set(echo = TRUE)
salaryData <- read.csv('/Users/daysg/Desktop/git-repo/Team-Anova-Project/Alyssa WIP/salary_data_states.csv')
# R install package
install.packages('magrittr')
install.packages('ggplot2')
#import the package
library(magrittr)
library(dplyr)
#import data
head(salaryData)
summary(salaryData)
avg_salary_by_subgroup <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED))
avg_salary_by_subgroup
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
avg_salary_by_workcity <- salaryData %>%
group_by(WORK_CITY) %>%
summarize(AvgCITYSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgCITYSalary))
avg_salary_by_workcity
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_city
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
group_by(EMPLOYER_NAME, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY, WORK_STATE_ABBREVIATION) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
avg_salary_by_employer <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
avg_salary_by_location <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
avg_salary_by_location <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY, WORK_STATE_ABBREVIATION) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
avg_salary_by_location <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY, WORK_STATE_ABBREVIATION, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
knitr::opts_chunk$set(echo = TRUE)
salaryData <- read.csv('/Users/daysg/Desktop/git-repo/Team-Anova-Project/Alyssa WIP/salary_data_states.csv')
# R install package
install.packages('magrittr')
install.packages('ggplot2')
#import the package
library(magrittr)
library(dplyr)
#import data
head(salaryData)
summary(salaryData)
avg_salary_by_subgroup <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED))
avg_salary_by_subgroup
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE, PAID_WAGE_PER_YEAR) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedPlaceSalary == max(MedPlaceSalary, na.rm=TRUE)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedPlaceSalary == max(MedPlaceSalary, na.rm=TRUE)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE, PAID_WAGE_PER_YEAR) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedPlaceSalary == max(MedPlaceSalary, na.rm=TRUE)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE, PAID_WAGE_PER_YEAR) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
filter(MedPlaceSalary == max(MedPlaceSalary, na.rm=TRUE)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE, PAID_WAGE_PER_YEAR) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
tail(median_salary_by_location)
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
tail(median_salary_by_location, 10)
knitr::opts_chunk$set(echo = TRUE)
salaryData <- read.csv('/Users/daysg/Desktop/git-repo/Team-Anova-Project/Alyssa WIP/salary_data_states.csv')
# R install package
install.packages('magrittr')
install.packages('ggplot2')
#import the package
library(magrittr)
library(dplyr)
#import data
head(salaryData)
summary(salaryData)
avg_salary_by_subgroup <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED))
avg_salary_by_subgroup
avg_salary_by_employer <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP, EMPLOYER_NAME) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
filter(AvgSalary == max(AvgSalary, na.rm=TRUE)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
med_salary_by_employer <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP, EMPLOYER_NAME) %>%
summarize(MedSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedSalary == max(MedSalary, na.rm=TRUE)) %>%
arrange(desc(MedSalary))
med_salary_by_employer
avg_salary_by_workcity <- salaryData %>%
group_by(WORK_CITY) %>%
summarize(AvgCITYSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgCITYSalary))
avg_salary_by_workcity
avg_salary_by_location <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY, WORK_STATE_ABBREVIATION, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
tail(median_salary_by_location, 10)
salary_by_location <- salaryData %>%
group_by(WORK_STATE, EMPLOYER_NAME) %>%
summarize(AvgSalary = mean(PAID_WAGE_PER_YEAR)) %>%
filter(AvgSalary == max(AvgSalary, na.rm=TRUE)) %>%
arrange(desc(AvgSalary))
salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
med_salary_by_employer <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP, WORK_STATE) %>%
summarize(MedSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedSalary == max(MedSalary, na.rm=TRUE)) %>%
arrange(desc(MedSalary))
med_salary_by_employer
med_salary_by_employer <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP, WORK_STATE, EMPLOYER_NAME) %>%
summarize(MedSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedSalary == max(MedSalary, na.rm=TRUE)) %>%
arrange(desc(MedSalary))
med_salary_by_employer
knitr::opts_chunk$set(echo = TRUE)
EDAData <- read.csv('/Users/daysg/Desktop/git-repo/TeamShiba/ames.csv')
head(EDAData, 10)
install.packages('magrittr')
install.packages('ggplot2')
#import the package
library(magrittr)
library(dplyr)
#import data
install.packages("magrittr")
below_average_condition <- subset(ames, OverallCond < 5)
below_average_condition <- subset(EDAData, OverallCond < 5)
average_condition <- subset(EDAData, OverallCond == 5)
above_average_condition <- subset(EDAData, OverallCond > 5)
below_average_condition <- subset(EDAData, OverallCond < 5)
average_condition <- subset(EDAData, OverallCond == 5)
above_average_condition <- subset(EDAData, OverallCond > 5)
ggplot()+
geom_histogram(aes(x=below_average_condition$SalePrice, fill="Below Average"), alpha=0.5, bins=70)+
geom_histogram(aes(x=average_condition$SalePrice, fill="Average"), alpha=0.3, bins=70)+
geom_histogram(aes(x=above_average_condition$SalePrice, fill="Above Average"), alpha=0.5, bins=70)+
ggtitle("Distributions of Sale Price Grouped by Condition")+
xlab("Sale Price")+
ylab("Number of Houses")
install.packages('magrittr')
install.packages('ggplot2')
#import the package
library(magrittr)
library(ggplot2)
#import data
install.packages("magrittr")
below_average_condition <- subset(EDAData, OverallCond < 5)
average_condition <- subset(EDAData, OverallCond == 5)
above_average_condition <- subset(EDAData, OverallCond > 5)
ggplot()+
geom_histogram(aes(x=below_average_condition$SalePrice, fill="Below Average"), alpha=0.5, bins=70)+
geom_histogram(aes(x=average_condition$SalePrice, fill="Average"), alpha=0.3, bins=70)+
geom_histogram(aes(x=above_average_condition$SalePrice, fill="Above Average"), alpha=0.5, bins=70)+
ggtitle("Distributions of Sale Price Grouped by Condition")+
xlab("Sale Price")+
ylab("Number of Houses")
cat("\ndplyr way\n")
correlation_EDA <- EDAData %>%
select_if(is.numeric) %>%
summarise_all(~cor(., EDAData$SalePrice))
max_corr_value <- max(correlation_EDAData)
cat("\ndplyr way\n")
correlation_EDA <- EDAData %>%
select_if(is.numeric) %>%
summarise_all(~cor(., EDAData$SalePrice))
max_corr_value <- max(correlation_EDA)
max_corr_column <- names(correlation_EDA)[which(correlation_EDAData == max_corr_value)]
cat("\ndplyr way\n")
correlation_EDA <- EDAData %>%
select_if(is.numeric) %>%
summarise_all(~cor(., EDAData$SalePrice))
max_corr_value <- max(correlation_EDA)
max_corr_column <- names(correlation_EDA)[which(correlation_EDA == max_corr_value)]
cat("Most Positively Correlated Column:", max_corr_column, "\n")
cat("Maximum Correlation Value:", max_corr_value, "\n")
cat("\ndplyr way\n")
correlation_EDA <- EDAData %>%
select_if(is.numeric) %>%
summarise_all(~cor(., EDAData$SalePrice))
max_corr_value <- max(correlation_EDA)
max_corr_column <- names(correlation_EDA)[which(correlation_EDA == max_corr_value)]
cat("Most Positively Correlated Column:", max_corr_column, "\n")
cat("Maximum Correlation Value:", max_corr_value, "\n")
max_corr_value
knitr::opts_chunk$set(echo = TRUE)
salaryData <- read.csv('/Users/daysg/Desktop/git-repo/Team-Anova-Project/Alyssa WIP/salary_data_states.csv')
# R install package
install.packages('magrittr')
install.packages('ggplot2')
#import the package
library(magrittr)
library(dplyr)
#import data
head(salaryData)
summary(salaryData)
avg_salary_by_subgroup <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED))
avg_salary_by_subgroup
avg_salary_by_employer <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP, EMPLOYER_NAME) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
filter(AvgSalary == max(AvgSalary, na.rm=TRUE)) %>%
arrange(desc(AvgSalary))
avg_salary_by_employer
med_salary_by_employer <- salaryData %>%
group_by(JOB_TITLE_SUBGROUP, WORK_STATE, EMPLOYER_NAME) %>%
summarize(MedSalary = median(PAID_WAGE_SUBMITTED)) %>%
filter(MedSalary == max(MedSalary, na.rm=TRUE)) %>%
arrange(desc(MedSalary))
med_salary_by_employer
avg_salary_by_workcity <- salaryData %>%
group_by(WORK_CITY) %>%
summarize(AvgCITYSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgCITYSalary))
avg_salary_by_workcity
avg_salary_by_location <- salaryData %>%
group_by(EMPLOYER_NAME, WORK_CITY, WORK_STATE_ABBREVIATION, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = mean(PAID_WAGE_SUBMITTED)) %>%
arrange(desc(AvgSalary))
avg_salary_by_location
median_salary_by_location <- salaryData %>%
group_by(WORK_STATE) %>%
summarize(MedPlaceSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedPlaceSalary))
median_salary_by_location
salary_by_location <- salaryData %>%
group_by(WORK_STATE, EMPLOYER_NAME) %>%
summarize(AvgSalary = mean(PAID_WAGE_PER_YEAR)) %>%
filter(AvgSalary == max(AvgSalary, na.rm=TRUE)) %>%
arrange(desc(AvgSalary))
salary_by_location
location_a <- salaryData %>%
group_by(WORK_STATE, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = median(PAID_WAGE_PER_YEAR)) %>%
filter(AvgSalary == max(AvgSalary, na.rm=TRUE)) %>%
arrange(desc(AvgSalary))
location_a
location_a <- salaryData %>%
group_by(WORK_STATE, JOB_TITLE_SUBGROUP) %>%
summarize(AvgSalary = median(PAID_WAGE_PER_YEAR)) %>%
filter(AvgSalary == max(MedianSalary, na.rm=TRUE)) %>%
arrange(desc(AvgSalary))
location_a <- salaryData %>%
group_by(WORK_STATE, JOB_TITLE_SUBGROUP) %>%
summarize(MedianSalary = median(PAID_WAGE_PER_YEAR)) %>%
filter(MedianSalary == max(MedianSalary, na.rm=TRUE)) %>%
arrange(desc(MedianSalary))
location_a
salary_CA_subset = subset(salaryData, WORK_STATE == "California")
salary_CA_subset = subset(salaryData, WORK_STATE == "California")
location_a <- salary_CA_subset %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(MedianSalary = median(PAID_WAGE_PER_YEAR)) %>%
filter(MedianSalary == max(MedianSalary, na.rm=TRUE)) %>%
arrange(desc(MedianSalary))
location_a
location_a <- salary_CA_subset %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(MedianSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MedianSalary))
location_a
location_a <- salary_CA_subset %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(CA_MedianSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(CA_MedianSalary))
location_a
salary_MA_subset = subset(salaryData, WORK_STATE == "Massachusetts")
salary_MA_subset = subset(salaryData, WORK_STATE == "Massachusetts")
location_MA <- salary_MA_subset %>%
group_by(JOB_TITLE_SUBGROUP) %>%
summarize(MA_MedianSalary = median(PAID_WAGE_PER_YEAR)) %>%
arrange(desc(MA_MedianSalary))
location_MA
# Create a df that contains only numeric columns
# and doesn't include SalePrice
numeric_df = EDAData[, unlist(lapply(EDAData, is.numeric))]
numeric_df = numeric_df[, !names(numeric_df) %in% "SalePrice"]
# Create list of correlations
correlations = cor(numeric_df, EDAData$SalePrice)
# Find the largest value, and the column name at that index
max_corr_value = max(correlations, na.rm = TRUE)
i = which(correlations == max_corr_value)
max_corr_column = rownames(correlations)[[i]]
noquote(c(paste("Most Positively Correlated Column:",
max_corr_column),
paste("Most Positively Correlated Value:",
max_corr_value)))
# Find the largest value, and the column name at that index
min_corr_value = min(correlations, na.rm = TRUE)
i = which(correlations == min_corr_value)
min_corr_column = rownames(correlations)[[i]]
noquote(c(paste("Most Positively Correlated Column:",
min_corr_column),
paste("Most Positively Correlated Value:",
min_corr_value)))
ggplot(EDAData, aes(y=Sale_Price, x=max_corr_column)) + geom_boxplot()
ggplot(EDAData, aes(y=EDAData$SalePrice, x=max_corr_column)) + geom_boxplot()
ggplot(EDAData, aes(y=EDAData$SalePrice, x=max_corr_column)) + geom_boxplot()
ggplot(EDAData, aes(y=EDAData$SalePrice, x=min_corr_column)) + geom_boxplot()
